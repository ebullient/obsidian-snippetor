export const SIMPLE_TASK = `
@charset "UTF-8";
/*
Generated by Snippetor on <%= it.date %>.
This file will be overwritten if you push the button again...
*/

<% if (it.cfg.clearThemeBackground) { %>
/** Clear settings from other themes */
.checklist-plugin-main .group .compact > .toggle .checked,
.is-flashing input[type=checkbox]:checked,
input[type=checkbox]:checked {
    background-color: unset !important;
}
<% } %>

.markdown-source-view.mod-cm6 input.task-list-item-checkbox,
.markdown-preview-view input.task-list-item-checkbox {
    -webkit-appearance: none;
    box-sizing: border-box;
    transition: background-color 200ms ease-out 0s;
    cursor: pointer;
    filter: none;
    border: 1px solid var(--text-normal);
    border-radius: 2px;
    margin-top: 2px;
    margin-bottom: 2px;
    position:relative;
}
.markdown-source-view.mod-cm6 input.task-list-item-checkbox:checked::before,
.markdown-preview-view input.task-list-item-checkbox:checked::before {
    font-family: var(--font-monospace);
    position: absolute;
    text-align: center;
    font-weight: 500;
    line-height: 14px;
    font-size: 14px;
    left: 1px;
    right: 1px;
}
.markdown-source-view.mod-cm6 input.task-list-item-checkbox::before,
.markdown-preview-view ul > li > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li > p > input.task-list-item-checkbox:checked::before {
    content: "âœ“";
    color: var(--text-normal);
}
.markdown-source-view.mod-cm6 input.task-list-item-checkbox,
.markdown-preview-view ul > li > input.task-list-item-checkbox,
.markdown-preview-view ul > li > p > input.task-list-item-checkbox {
    border-color: var(--text-normal);
    color: var(--text-normal);
}
.markdown-preview-view ul > li.task-list-item {
    font-weight: normal;
    color: var(--text-normal);
}
.markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:not([data-task=" "]),
.markdown-source-view.mod-cm6 input.task-list-item-checkbox + span,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox + span + span,
.markdown-preview-view ul > li.task-list-item.is-checked {
    color: var(--text-normal);
    text-decoration: none;
}
<% for (let i = 0; i < it.cfg.taskSettings.length; i++) {
   let ts = it.cfg.taskSettings[i]; %>
/* '<%~ ts.data %>' for completed task ('- [<%~ ts.data %>]') */
.theme-dark {
    --snippetor-checkbox-<%= i %>: <%= ts.taskColorDark %>;
}
.theme-dark .print,
.theme-light {
    --snippetor-checkbox-<%= i %>: <%= ts.taskColorLight %>;
}
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="<%~ ts.data %>"]::before,
.markdown-preview-view ul > li[data-task="<%~ ts.data %>"] > input.task-list-item-checkbox:checked::before,
.markdown-preview-view ul > li[data-task="<%~ ts.data %>"] > p > input.task-list-item-checkbox:checked::before {
<% if (ts.reader) { %>
    content: "<%= ts.reader %>";
<% } else { %>
    content: "<%~ ts.data %>";
<% } %>
    color: var(--snippetor-checkbox-<%= i %>);
}
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="<%~ ts.data %>"],
.markdown-preview-view ul > li[data-task="<%~ ts.data %>"] > input.task-list-item-checkbox,
.markdown-preview-view ul > li[data-task="<%~ ts.data %>"] > p > input.task-list-item-checkbox {
    border-color: var(--snippetor-checkbox-<%= i %>);
    color: var(--snippetor-checkbox-<%= i %>);
}
<% if (ts.strkethrough || ts.applyTextColor) { %>
.markdown-source-view.mod-cm6 .HyperMD-task-line[data-task="<%~ ts.data %>"],
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="<%~ ts.data %>"] + span,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox[data-task="<%~ ts.data %>"] + span + span,
.markdown-preview-view ul > li[data-task="<%~ ts.data %>"].task-list-item.is-checked {
<% if (ts.strkethrough) { %>
    text-decoration: line-through;
<% } %>
<% if (ts.applyTextColor) { %>
    color: var(--snippetor-checkbox-<%= i %>);
<% } %>
}
<% } %>

<% } %>

/* Consistent hover colors */
.markdown-source-view.mod-cm6 input.task-list-item-checkbox:hover,
.markdown-source-view.mod-cm6 input.task-list-item-checkbox:checked:hover,
<% it.cfg.taskSettings.forEach(function(ts){ %>
.markdown-preview-view li[data-task="<%~ ts.data %>"] > input.task-list-item-checkbox:checked:hover,
.markdown-preview-view li[data-task="<%~ ts.data %>"] > p > input.task-list-item-checkbox:checked:hover,
<% }) %>
.markdown-preview-view input.task-list-item-checkbox:hover {
    color: var(--text-on-accent) !important;
    background-color: var(--interactive-accent-hover);
    border-color: var(--text-on-accent) !important;
}
`;
